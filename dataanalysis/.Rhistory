} else { ratio = 8/9; }
} else {  if (t1[3] == "short"){  ratio = ratio = 6/4.5;
} else {  ratio = 6/9; } }
} else if (type == "overTime" || type =="speed"){ ratio = 6/9; }
colors = c("#80CDC1", "#EB5559");
if (type == "xCoord"){
# create plot row for XCOORD ~ TARGET
if (t1[4][1] == "horizontal"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
} else {
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
# create plot row for overTime ~ Target
} else if (type == "overTime"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
# create plot row for speed ~ time
} else if (type == "speed"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,0.5)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (cm/s)") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
print(paste (type,  ",   row== nrow(t1)", row==nrow(t1), sep =""));
# create page for every 10 plot rows
nrow = 0;
if (row %%10 ==0){
nrow = 10;
} else if (row == nrow(t1)){
nrow = row;
}
if (row %% 10 == 0 || row == nrow(t1)){
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 7;
labellist = c("1", "2", "3", "4", "5", "6", "7");
#labellist = c("1", "2", "3");
saveVariantPlots(type, finallist, variant, ncol, nrow, labellist, pageNr);
pageNr = pageNr + 1;
finallist = c();
}
}
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
createVariantPlot("xCoord", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("overTime", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("speed", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
}
}
orderTasksForPlotting(variant_list_STUDY)
# Save plots per variant, limtied to X rows (to define)
saveVariantPlots = function(type, finallist, variant, ncol, nrow, labellist, pageNr){
pageTxt = paste("page ", pageNr, sep="");
# Create Plot
plot = ggarrange(plotlist = finallist,
vjust = 1,
hjust = -0.5,
font.label = list(size = 32, color = "black", face = "bold", family = NULL),
ncol = ncol,
align = "h",
nrow = nrow,
labels= paste("Target: ", labellist, sep = ""),
common.legend = TRUE) +
theme(plot.margin = margin(0.5,0.5,2,0.5, "cm")) ;
plot = annotate_figure(plot, top = text_grob(variant, color = "black", size=48));
plot = annotate_figure(plot, bottom = text_grob(pageTxt, color = "black", size=18));
# Save Plot as PNG
if (type =="xCoord"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_xCOORD_", "_page_", pageNr, ".png", sep ="");
} else if (type == "overTime"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_OVERTIME_", "_page_", pageNr, ".png", sep ="");
} else if (type == "speed"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_SPEED_", "_page_", pageNr, ".png", sep ="");
}
png(file=path, width=2600, height=2000)
print(plot);
dev.off()
}
# Calculate speed of finger movement in cm / second
calculateSpeed = function (oldPair, newPair){
oldPos = oldPair[[1]] * width_MM / width_PX;
newPos = newPair[[1]] * width_MM / width_PX;
distance = abs(newPos - oldPos); # in mm
oldTime = oldPair[[3]];
newTime = newPair[[3]];
delta = (newTime - oldTime) ; # in ms
print (paste(distance, " mm in ", delta, " mm!"));
return (distance / delta);
}
createVariantPlot <- function(type, t1, t2, t3, t4, t5, t6, t7){
finallist = list();
plotlist = list();
pageNr = 1;
tList = list(t1, t2, t3, t4, t4, t5, t6, t7);
# tList = list(t1, t2, t3);
count = 1;
lastPair = list (0,0,0,0);
# go through every row of the data frames with the tasks
for (row in 1:nrow(t1)){
plotRow = list();
for (t in tList){
target = t[7];
# get associated measurementPairs via rowname
pairs = measurementPairList[[as.integer(rownames(t)[row])]];
x = c();
y = c();
time = c();
overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
# for xCoord Plot
if (type == "xCoord"){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
}
# for overTime Plot
if (type =="overTime"){
x = c(x, pair[[3]]);
y = c(y, pair[[1]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
# for speed Plot
if (type =="speed"&& pair[[3]] - lastPair[[3]] >= 100){
x = c(x, pair[[3]]);
time = c(time, pair[[3]]);
y = c(y, calculateSpeed(lastPair, pair));
lastPair = pair;
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
}
if (type == "xCoord"){
# recalculate x coord values to mm
if(t1[4] == "horizontal"){ y = y * width_MM / width_PX;
} else { x = x * width_MM / width_PX;}
# recalculate overtime to seconds
} else if (type == "overTime" || type =="speed"){ x = x / 1000; }
dataframe = data.frame(x,y,time, overshoot);
plotRow = c(plotRow, list(dataframe))
};
ylim = 0;
# set ratio according to orientation and length
ratio =0;
if (type == "xCoord"){
if (t1[4] == "vertical"){
if (t1[3] == "short"){ratio = ratio = 5/9;
} else { ratio = 8/9; }
} else {  if (t1[3] == "short"){  ratio = ratio = 6/4.5;
} else {  ratio = 6/9; } }
} else if (type == "overTime" || type =="speed"){ ratio = 6/9; }
colors = c("#80CDC1", "#EB5559");
if (type == "xCoord"){
# create plot row for XCOORD ~ TARGET
if (t1[4][1] == "horizontal"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
} else {
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
# create plot row for overTime ~ Target
} else if (type == "overTime"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
# create plot row for speed ~ time
} else if (type == "speed"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
print(paste (type,  ",   row== nrow(t1)", row==nrow(t1), sep =""));
# create page for every 10 plot rows
nrow = 0;
if (row %%10 ==0){
nrow = 10;
} else if (row == nrow(t1)){
nrow = row;
}
if (row %% 10 == 0 || row == nrow(t1)){
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 7;
labellist = c("1", "2", "3", "4", "5", "6", "7");
#labellist = c("1", "2", "3");
saveVariantPlots(type, finallist, variant, ncol, nrow, labellist, pageNr);
pageNr = pageNr + 1;
finallist = c();
}
}
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
createVariantPlot("xCoord", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("overTime", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("speed", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
}
}
orderTasksForPlotting(variant_list_STUDY)
createListOfMeasurementPairs = function (list){
measurementPairsList = list();
# go through every user
for(i in 1:length(list)) {
# go through every task
for (j in 1:length(list[[i]])){
item = list[[i]][[j]]
if (item[[5]] == "study"){
measurementPairsList = c(measurementPairsList, list(item[[10]]))
} else {
measurementPairsList = c(measurementPairsList, list(item[[9]]))
}
}
}
return (measurementPairsList);
}
measurementPairList = createListOfMeasurementPairs(sliderdataList);
# Save plots per variant, limtied to X rows (to define)
saveVariantPlots = function(type, finallist, variant, ncol, nrow, labellist, pageNr){
pageTxt = paste("page ", pageNr, sep="");
# Create Plot
plot = ggarrange(plotlist = finallist,
vjust = 1,
hjust = -0.5,
font.label = list(size = 32, color = "black", face = "bold", family = NULL),
ncol = ncol,
align = "h",
nrow = nrow,
labels= paste("Target: ", labellist, sep = ""),
common.legend = TRUE) +
theme(plot.margin = margin(0.5,0.5,2,0.5, "cm")) ;
plot = annotate_figure(plot, top = text_grob(variant, color = "black", size=48));
plot = annotate_figure(plot, bottom = text_grob(pageTxt, color = "black", size=18));
# Save Plot as PNG
if (type =="xCoord"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_xCOORD_", "_page_", pageNr, ".png", sep ="");
} else if (type == "overTime"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_OVERTIME_", "_page_", pageNr, ".png", sep ="");
} else if (type == "speed"){
path = paste("C:\\Users\\kathr_\\OneDrive\\Desktop\\HCI Master\\2.Semester\\IndPrak\\DataAnalysis\\prestudy\\", variant, "_SPEED_", "_page_", pageNr, ".png", sep ="");
}
png(file=path, width=2600, height=2000)
print(plot);
dev.off()
}
# Calculate speed of finger movement in cm / second
calculateSpeed = function (length, oldPair, newPair){
oldPos = 0;
newPos = 0;
if (length == "short"){
oldPos = oldPair[[1]] * length_S_MM / length_S_PX;
newPos = newPair[[1]] * length_S_MM / length_S_PX;
} else {
oldPos = oldPair[[1]] * length_L_MM / length_L_PX;
newPos = newPair[[1]] * length_L_MM / length_L_PX;
}
distance = abs(newPos - oldPos); # in mm
oldTime = oldPair[[3]];
newTime = newPair[[3]];
delta = (newTime - oldTime) ; # in ms
print (paste(distance, " mm in ", delta, " mm!"));
return (distance / delta);
}
createVariantPlot <- function(type, t1, t2, t3, t4, t5, t6, t7){
finallist = list();
plotlist = list();
pageNr = 1;
tList = list(t1, t2, t3, t4, t4, t5, t6, t7);
# tList = list(t1, t2, t3);
count = 1;
lastPair = list (0,0,0,0);
# go through every row of the data frames with the tasks
for (row in 1:nrow(t1)){
plotRow = list();
for (t in tList){
target = t[7];
# get associated measurementPairs via rowname
pairs = measurementPairList[[as.integer(rownames(t)[row])]];
x = c();
y = c();
time = c();
overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
# for xCoord Plot
if (type == "xCoord"){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
}
# for overTime Plot
if (type =="overTime"){
x = c(x, pair[[3]]);
y = c(y, pair[[1]]);
time = c(time, pair[[3]]);
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
# for speed Plot
if (type =="speed"&& pair[[3]] - lastPair[[3]] >= 100){
x = c(x, pair[[3]]);
time = c(time, pair[[3]]);
y = c(y, calculateSpeed(t1[3], lastPair, pair));
lastPair = pair;
if (pair[[1]] > target){ overshoot = c(overshoot, "yes");
} else { overshoot = c(overshoot, "no"); }
}
}
if (type == "xCoord"){
# recalculate x coord values to mm
if(t1[4] == "horizontal"){ y = y * width_MM / width_PX;
} else { x = x * width_MM / width_PX;}
# recalculate overtime to seconds
} else if (type == "overTime" || type =="speed"){ x = x / 1000; }
dataframe = data.frame(x,y,time, overshoot);
plotRow = c(plotRow, list(dataframe))
};
ylim = 0;
# set ratio according to orientation and length
ratio =0;
if (type == "xCoord"){
if (t1[4] == "vertical"){
if (t1[3] == "short"){ratio = ratio = 5/9;
} else { ratio = 8/9; }
} else {  if (t1[3] == "short"){  ratio = ratio = 6/4.5;
} else {  ratio = 6/9; } }
} else if (type == "overTime" || type =="speed"){ ratio = 6/9; }
colors = c("#80CDC1", "#EB5559");
if (type == "xCoord"){
# create plot row for XCOORD ~ TARGET
if (t1[4][1] == "horizontal"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_x_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + ylim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"), legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(y = "vertical position (mm)", x = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
} else {
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,width_MM) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "horizontal position (mm)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
# create plot row for overTime ~ Target
} else if (type == "overTime"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + scale_y_continuous(limits= c(0,7), breaks = seq(1, 8, 1)) + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "steps") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
# create plot row for speed ~ time
} else if (type == "speed"){
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p4 = ggplot(plotRow[[4]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p5 = ggplot(plotRow[[5]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p6 = ggplot(plotRow[[6]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
p7 = ggplot(plotRow[[7]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.3, size = 1.5) + ylim(0,200)  + xlim(0,max(data_STUDY$Completiontime)/1000) + theme(legend.text = element_text(size=24, face="bold"),legend.title = element_text(size = 32, face = "bold"), aspect.ratio=ratio, axis.text=element_text(size=24), axis.title=element_text(size=32,face="bold")) + labs(x = "time (s)", y = "velocity (mm/ms)") + scale_colour_discrete(limits = c("yes", "no"));
plotlist = list(p1, p2, p3, p4, p5, p6, p7);
finallist = c(finallist, plotlist);
}
print(paste (type,  ",   row== nrow(t1)", row==nrow(t1), sep =""));
# create page for every 10 plot rows
nrow = 0;
if (row %%10 ==0){
nrow = 10;
} else if (row == nrow(t1)){
nrow = row;
}
if (row %% 10 == 0 || row == nrow(t1)){
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 7;
labellist = c("1", "2", "3", "4", "5", "6", "7");
#labellist = c("1", "2", "3");
saveVariantPlots(type, finallist, variant, ncol, nrow, labellist, pageNr);
pageNr = pageNr + 1;
finallist = c();
}
}
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
createVariantPlot("xCoord", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("overTime", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
createVariantPlot("speed", subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
}
}
orderTasksForPlotting(variant_list_STUDY)
